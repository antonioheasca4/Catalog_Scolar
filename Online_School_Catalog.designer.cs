#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Catalog_Scolar_Online
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Online_School_Catalog")]
	public partial class Online_School_CatalogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConturi(Conturi instance);
    partial void UpdateConturi(Conturi instance);
    partial void DeleteConturi(Conturi instance);
    partial void InsertProfesori(Profesori instance);
    partial void UpdateProfesori(Profesori instance);
    partial void DeleteProfesori(Profesori instance);
    partial void InsertUtilizatori(Utilizatori instance);
    partial void UpdateUtilizatori(Utilizatori instance);
    partial void DeleteUtilizatori(Utilizatori instance);
    #endregion
		
		public Online_School_CatalogDataContext() : 
				base(global::Catalog_Scolar_Online.Properties.Settings.Default.Online_School_CatalogConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Online_School_CatalogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Online_School_CatalogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Online_School_CatalogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Online_School_CatalogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Conturi> Conturis
		{
			get
			{
				return this.GetTable<Conturi>();
			}
		}
		
		public System.Data.Linq.Table<Profesori> Profesoris
		{
			get
			{
				return this.GetTable<Profesori>();
			}
		}
		
		public System.Data.Linq.Table<Utilizatori> Utilizatoris
		{
			get
			{
				return this.GetTable<Utilizatori>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conturi")]
	public partial class Conturi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContID;
		
		private string _Email;
		
		private int _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContIDChanging(int value);
    partial void OnContIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRolChanging(int value);
    partial void OnRolChanged();
    #endregion
		
		public Conturi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContID
		{
			get
			{
				return this._ContID;
			}
			set
			{
				if ((this._ContID != value))
				{
					this.OnContIDChanging(value);
					this.SendPropertyChanging();
					this._ContID = value;
					this.SendPropertyChanged("ContID");
					this.OnContIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="Int NOT NULL")]
		public int Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profesori")]
	public partial class Profesori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfesorID;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Grad;
		
		private System.Nullable<int> _Vechime;
		
		private int _UtilizatorID;
		
		private EntityRef<Utilizatori> _Utilizatori;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfesorIDChanging(int value);
    partial void OnProfesorIDChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    partial void OnVechimeChanging(System.Nullable<int> value);
    partial void OnVechimeChanged();
    partial void OnUtilizatorIDChanging(int value);
    partial void OnUtilizatorIDChanged();
    #endregion
		
		public Profesori()
		{
			this._Utilizatori = default(EntityRef<Utilizatori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfesorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfesorID
		{
			get
			{
				return this._ProfesorID;
			}
			set
			{
				if ((this._ProfesorID != value))
				{
					this.OnProfesorIDChanging(value);
					this.SendPropertyChanging();
					this._ProfesorID = value;
					this.SendPropertyChanged("ProfesorID");
					this.OnProfesorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vechime", DbType="Int")]
		public System.Nullable<int> Vechime
		{
			get
			{
				return this._Vechime;
			}
			set
			{
				if ((this._Vechime != value))
				{
					this.OnVechimeChanging(value);
					this.SendPropertyChanging();
					this._Vechime = value;
					this.SendPropertyChanged("Vechime");
					this.OnVechimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilizatorID", DbType="Int NOT NULL")]
		public int UtilizatorID
		{
			get
			{
				return this._UtilizatorID;
			}
			set
			{
				if ((this._UtilizatorID != value))
				{
					if (this._Utilizatori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUtilizatorIDChanging(value);
					this.SendPropertyChanging();
					this._UtilizatorID = value;
					this.SendPropertyChanged("UtilizatorID");
					this.OnUtilizatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Profesori", Storage="_Utilizatori", ThisKey="UtilizatorID", OtherKey="UtilizatorID", IsForeignKey=true)]
		public Utilizatori Utilizatori
		{
			get
			{
				return this._Utilizatori.Entity;
			}
			set
			{
				Utilizatori previousValue = this._Utilizatori.Entity;
				if (((previousValue != value) 
							|| (this._Utilizatori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizatori.Entity = null;
						previousValue.Profesoris.Remove(this);
					}
					this._Utilizatori.Entity = value;
					if ((value != null))
					{
						value.Profesoris.Add(this);
						this._UtilizatorID = value.UtilizatorID;
					}
					else
					{
						this._UtilizatorID = default(int);
					}
					this.SendPropertyChanged("Utilizatori");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizatori")]
	public partial class Utilizatori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UtilizatorID;
		
		private string _Parola;
		
		private string _Email;
		
		private int _Rol;
		
		private string _ImagineProfil;
		
		private EntitySet<Profesori> _Profesoris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUtilizatorIDChanging(int value);
    partial void OnUtilizatorIDChanged();
    partial void OnParolaChanging(string value);
    partial void OnParolaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRolChanging(int value);
    partial void OnRolChanged();
    partial void OnImagineProfilChanging(string value);
    partial void OnImagineProfilChanged();
    #endregion
		
		public Utilizatori()
		{
			this._Profesoris = new EntitySet<Profesori>(new Action<Profesori>(this.attach_Profesoris), new Action<Profesori>(this.detach_Profesoris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilizatorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UtilizatorID
		{
			get
			{
				return this._UtilizatorID;
			}
			set
			{
				if ((this._UtilizatorID != value))
				{
					this.OnUtilizatorIDChanging(value);
					this.SendPropertyChanging();
					this._UtilizatorID = value;
					this.SendPropertyChanged("UtilizatorID");
					this.OnUtilizatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parola", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Parola
		{
			get
			{
				return this._Parola;
			}
			set
			{
				if ((this._Parola != value))
				{
					this.OnParolaChanging(value);
					this.SendPropertyChanging();
					this._Parola = value;
					this.SendPropertyChanged("Parola");
					this.OnParolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="Int NOT NULL")]
		public int Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagineProfil", DbType="NVarChar(30)")]
		public string ImagineProfil
		{
			get
			{
				return this._ImagineProfil;
			}
			set
			{
				if ((this._ImagineProfil != value))
				{
					this.OnImagineProfilChanging(value);
					this.SendPropertyChanging();
					this._ImagineProfil = value;
					this.SendPropertyChanged("ImagineProfil");
					this.OnImagineProfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizatori_Profesori", Storage="_Profesoris", ThisKey="UtilizatorID", OtherKey="UtilizatorID")]
		public EntitySet<Profesori> Profesoris
		{
			get
			{
				return this._Profesoris;
			}
			set
			{
				this._Profesoris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Profesoris(Profesori entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = this;
		}
		
		private void detach_Profesoris(Profesori entity)
		{
			this.SendPropertyChanging();
			entity.Utilizatori = null;
		}
	}
}
#pragma warning restore 1591
